package sessions

import (
	"automobile36/internal/db"
	"automobile36/internal/utils"
	"fmt"
	"github.com/PaulSonOfLars/gotgbot/v2"
	"github.com/PaulSonOfLars/gotgbot/v2/ext"
	"github.com/PaulSonOfLars/gotgbot/v2/ext/handlers"
	"github.com/PaulSonOfLars/gotgbot/v2/ext/handlers/filters/message"
	"os"
)

func LoadMenuHandlers(dp *ext.Dispatcher) {
	dp.AddHandler(handlers.NewMessage(message.Equal("–ó–∞–ø–∏—Å—å üìÉ"), SendRecordsMenu))
	dp.AddHandler(handlers.NewMessage(message.Equal("–ü—Ä–∞–π—Å –ª–∏—Å—Ç üíµ"), SendPrice))
	dp.AddHandler(handlers.NewMessage(message.Equal("–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã ‚òé"), SendContacts))
	dp.AddHandler(handlers.NewMessage(message.Equal("–ú—ã –Ω–∞ –∫–∞—Ä—Ç–∞—Ö üó∫Ô∏è"), SendLocation))
}

func SendRecordsMenu(b *gotgbot.Bot, ctx *ext.Context) error {
	if ctx.EffectiveChat.Type != "private" {
		return nil
	}
	name, number, err := db.GetInfo(int(ctx.EffectiveChat.Id))
	if err != nil {
		return fmt.Errorf("error while getting info about user: %w", err)
	}

	t := fmt.Sprintf(`<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>
<b>–ò–º—è: %s</b>
<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: %d</b>
–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞".
–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å".`, name, number)
	if _, err := ctx.EffectiveChat.SendMessage(b, t, &gotgbot.SendMessageOpts{
		ParseMode:   "html",
		ReplyMarkup: utils.GetRecordsKeyboard(),
	}); err != nil {
		return fmt.Errorf("error while sending records menu: %w", err)
	}

	return nil
}

func SendPrice(b *gotgbot.Bot, ctx *ext.Context) error {
	if ctx.EffectiveChat.Type != "private" {
		return nil
	}
	file, err := os.Open("img/price.jpg")
	if err != nil {
		return fmt.Errorf("error while opening file: %w", err)
	}
	defer file.Close()

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
	_, err = b.SendPhoto(ctx.EffectiveChat.Id, file, &gotgbot.SendPhotoOpts{})
	if err != nil {
		return fmt.Errorf("error while sending photo: %w", err)
	}

	return nil
}

func SendContacts(b *gotgbot.Bot, ctx *ext.Context) error {
	if ctx.EffectiveChat.Type != "private" {
		return nil
	}
	_, err := ctx.EffectiveChat.SendMessage(b, "–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:\n+7XXXXXXXXXX\n7XXXXXXXXXX\n\n–ú—ã –í–ö: https://vk.com/XXXXXXXXXXXX", nil)
	if err != nil {
		return fmt.Errorf("error while sending contacts: %w", err)
	}

	return nil
}

func SendLocation(b *gotgbot.Bot, ctx *ext.Context) error {
	if ctx.EffectiveChat.Type != "private" {
		return nil
	}
	_, err := b.SendLocation(ctx.EffectiveChat.Id, 55.754029, 37.620743, nil)
	if err != nil {
		return fmt.Errorf("error while sending location: %w", err)
	}

	return nil
}
